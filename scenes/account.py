from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import ContextTypes
from user_storage import days_left, get_user, get_api, is_trial_active, trial_left_minutes
from scenes.payment import payment_menu
from utils import safe_edit_message_text
from db import create_user   # <--- –¥–æ–±–∞–≤–ª–µ–Ω–æ

def account_keyboard(api_set, balance, trial_active):
    kb = []
    if balance == 0 and not trial_active:
        kb.append([InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="pay_menu")])
    else:
        if api_set:
            kb.append([
                InlineKeyboardButton("üìä –û—Ç—á—ë—Ç—ã", callback_data="reports_menu"),
                InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å API-–∫–ª—é—á", callback_data="api_change"),
                InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å API", callback_data="api_remove"),
            ])
        else:
            kb.append([InlineKeyboardButton("üîë –í–≤–µ—Å—Ç–∏ API", callback_data="api_entry")])
    kb.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞ —Å—Ç–∞—Ä—Ç", callback_data="main_menu")])
    return InlineKeyboardMarkup(kb)

async def account_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    username = update.effective_user.username or ""
    create_user(user_id, username)  # <-- —Å–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç

    user = get_user(user_id) or {}  # <-- –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    balance = days_left(user_id)
    api = user.get("api_key")
    api_set = bool(api)
    trial_active = is_trial_active(user_id)

    if balance > 0:
        status = f"–ë–∞–ª–∞–Ω—Å: <b>{balance} –¥–Ω.</b>"
    elif trial_active:
        mins = trial_left_minutes(user_id)
        status = f"–ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø: <b>{mins} –º–∏–Ω.</b> –æ—Å—Ç–∞–ª–æ—Å—å"
    else:
        await payment_menu(update, context)
        return

    if api_set:
        text = (
            f"üë§ <b>–í–∞—à –∞–∫–∫–∞—É–Ω—Ç</b>\n"
            f"{status}\n\n"
            f"API-–∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω ‚úÖ\n"
            "<b>–í–∞—à API:</b>\n"
            f"<code>{api}</code>\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∫–ª—é—á."
        )
    else:
        text = (
            f"üë§ <b>–í–∞—à –∞–∫–∫–∞—É–Ω—Ç</b>\n"
            f"{status}\n\n"
            "üö® <b>API-–∫–ª—é—á –Ω–µ –≤–≤–µ–¥—ë–Ω</b>!\n"
            "–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à API-–∫–ª—é—á WB. "
            "–ì–¥–µ –µ–≥–æ –≤–∑—è—Ç—å ‚Äî —Å–º. <a href='https://seller.wildberries.ru/supplier-settings/access-to-api'>–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é</a>."
        )

    if update.callback_query:
        await safe_edit_message_text(
            update.callback_query, text, reply_markup=account_keyboard(api_set, balance, trial_active), parse_mode="HTML", disable_web_page_preview=True
        )
    else:
        await update.message.reply_text(
            text, reply_markup=account_keyboard(api_set, balance, trial_active), parse_mode="HTML", disable_web_page_preview=True
        )
