from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import ContextTypes
from user_storage import is_trial_active, set_trial, trial_left_minutes, get_user
from utils import safe_edit_message_text

def payment_keyboard(user_id):
    user = get_user(user_id)
    kb = [[InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data="pay_invoice")]]
    if not user.get("trial_used"):
        kb.append([InlineKeyboardButton("üí° –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ (1 —á–∞—Å)", callback_data="trial_activate")])
    kb.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞ —Å—Ç–∞—Ä—Ç", callback_data="main_menu")])
    return InlineKeyboardMarkup(kb)

async def payment_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    trial_active = is_trial_active(user_id)
    msg = (
        "üîí <b>–î–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –ø–ª–∞—Ç–Ω—ã–π.</b>\n"
        "–°—Ç–æ–∏–º–æ—Å—Ç—å: <b>450‚ÇΩ/–º–µ—Å—è—Ü</b>\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É, –ª–∏–±–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è <b>1 —á–∞—Å–æ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞</b> –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –±–æ—Ç–æ–º."
    )
    if trial_active:
        mins = trial_left_minutes(user_id)
        msg += f"\n\nüí° <b>–£ –≤–∞—Å —Å–µ–π—á–∞—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø: –æ—Å—Ç–∞–ª–æ—Å—å {mins} –º–∏–Ω.</b>"
    await safe_edit_message_text(
        update.callback_query, msg, reply_markup=payment_keyboard(user_id), parse_mode="HTML"
    )

async def payment_invoice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.callback_query.answer("–§—É–Ω–∫—Ü–∏—è –æ–ø–ª–∞—Ç—ã –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")

from scenes.account import account_menu

async def payment_trial_activate(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    set_trial(user_id)
    await update.callback_query.answer("–ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ 1 —á–∞—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
    await account_menu(update, context)
